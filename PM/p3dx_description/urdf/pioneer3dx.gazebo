<?xml version="1.0"?>

<!-- 
This is the gazebo urdf description of a Pioneer 3DX.
Copyright (C) 2013 Rafael Berkvens rafael.berkvens@uantwerpen.be

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<robot>

  <!-- properties (constants) -->
  <property name="ns" value="p3dx" />

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/${ns}</robotNamespace>
    </plugin>
  </gazebo>

  <!-- base_link -->
	<gazebo reference="base_link">
		<material>Gazebo/Red</material>
	</gazebo>

  <!-- top_plate -->
  <gazebo reference="top_plate">
    <material>Gazebo/Black</material>
  </gazebo>
  
  <!-- swivel -->
  <gazebo reference="swivel">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <!-- center_hubcap -->
	<gazebo reference="center_hubcap">
		<material>Gazebo/Grey</material>
	</gazebo>
  
  <!-- center_wheel -->
	<gazebo reference="center_wheel">
		<material>Gazebo/Black</material>
		<mu1>10.0</mu1>
		<mu2>10.0</mu2>
		<kp>1000000.0</kp>
		<kd>1.0</kd>
	</gazebo>
  
  <!-- front_sonar -->  
  <gazebo reference="front_sonar">
    <material value="Gazebo/Yellow" />
  </gazebo>
  
 <gazebo reference="big_led">
    <material>Gazebo/Green</material>
    <!-- local do plugin para colorir a led -->
    <visual>
      <!--
    <plugin name="led_coloring" filename="/home/softelli/catkin_ws/src/PioneerModel/p3dx_led/build/libled_coloring.so"/>
      -->
      <!-- plugin destinado a ilustrar o status do robo (vagando, circunavegando, etc...).
      Nao funcionou pois dah erro em tempo de carga/execucao no gzserver: symbol loockup error.
      Foi postergado e nao eh parte essencial do projeto.
      
      <plugin name="big_led" filename="/home/softelli/catkin_ws/src/PioneerModel/p3dx_led/build/libbig_led.so"/>
      -->
  </visual>
</gazebo>

  <!-- differential drive -->
	<gazebo>
		<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>100</updateRate><!-- original = 100 -->
			<leftJoint>base_right_wheel_joint</leftJoint>
			<rightJoint>base_left_wheel_joint</rightJoint>
			<wheelSeparation>0.39</wheelSeparation>
			<wheelDiameter>0.15</wheelDiameter>
			<torque>5</torque>

			<!-- <commandTopic>${ns}/cmd_vel</commandTopic> -->
			<!-- <odometryTopic>${ns}/odom</odometryTopic>  -->

			<commandTopic>cmd_vel</commandTopic>
			<odometryTopic>odom</odometryTopic>			
			
			<odometryFrame>odom</odometryFrame>
			<robotBaseFrame>base_link</robotBaseFrame>
		</plugin>
	</gazebo>

  <!-- ground truth -->
	<gazebo>
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>100.0</updateRate>
			<bodyName>base_link</bodyName>
			<topicName>${ns}/base_pose_ground_truth</topicName>
			<gaussianNoise>0.01</gaussianNoise>
			<frameName>map</frameName>
			<!-- initialize odometry for fake localization -->
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</gazebo>
	
	<!-- lms100 -->
	<gazebo reference="lms100">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>true</visualize>
			<update_rate>50</update_rate> <!-- estava 50 -->
			<ray>
				<scan>
					<horizontal>
						<samples>270</samples> <!-- quantidade de indices de ranges[] -->
						<resolution>1</resolution>
						<min_angle>-2.35619449615 </min_angle>
						<max_angle>2.35619449615 </max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.25</min> <!-- 0.10 - o big_led tem raio de 0.15-->
					<max>3.00</max> <!-- 30.0 -->
					<resolution>0.05</resolution> <!-- 0.1 -->
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser achieving 
						"+-30mm" accuracy at range < 10m. A mean of 0.0m and stddev of 0.01m will 
						put 99.7% of samples within 0.03m of the true reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topicName>${ns}/laser/scan</topicName>
				<frameName>lms100</frameName>
			</plugin>
		</sensor>
	</gazebo>

  
</robot>
